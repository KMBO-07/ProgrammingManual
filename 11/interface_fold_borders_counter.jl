"""
interface_fold_borders(robot, direct_borders)

-- robot - именованный кортеж функций (интерфейс), включающий функции:
 move!(side) (перемещает Робота на 1 клетку в заданном направлении), isborder(side)

-- direct_borders - главное направление движения, перпендикулярное складкам "змейки"

-- возвращает именованный кортеж функций (интерфейс), состоящий из 2х функций:
    move!(side), get_num() 

Функция get_num() возвращает ОБЩЕЕ число перегородок, мимо которых прошел Робот с помощью 
функции move!(side)

Описание функции move!:

ДАНО: в направлении direct от Робота перегородки нет
side - направление перемещения, перпендикулярное направлению direct

РЕЗУЛЬТАТ: в направлении direct от Робота ПОПРЕЖНЕМУ НЕТ перегородки, 
но Робот прошёл мимо очередной перегородки, если таковая имелась на его пути, 
а если таких перегородок не было, то он росто дошел до упора. 
При этом, если в направлении side имелась преграждающая путь перегородка, то Робот остался на месте.
Если Робот сделал шаг, то возвращено true, если остался на месте, то возвращено false

Внешняя (замыкаемая) переременная увеличивается при этом 1, если была пройдена новая перегородка, или, в противном случае, 
её значение остаётся без изменения
"""

function interface_fold_borders_counter(robot, direct_borders)
    # robot = interface_save_robot(...) | interface_rectangular_borders(...) || ....
    num_borders = 0

    function move!(side)
    #=
        ДАНО: в направлении direct_borders от Робота перегородки нет
        side - направление перемещения, перпендикулярное направлению direct_borders
        РЕЗУЛЬТАТ: в направлении direct_borders от Робота ПОПРЕЖНЕМУ НЕТ перегородки, 
        но Робот прошёл мимо очередной перегородки, если таковая имелась на его пути, 
        а если таких перегородок не было, то он дошел до упора, 
        или Робот остался на месте, если в направлении side имелась перегородка.
        Если Робот сделал шаг, то возвращено true, если остался на месте, то возвращено false
    =#  
        while !robot.isborder(direct_borders) # || state==1
            if robot.move!(side)==false # robot.move!(side)==true <=> перемещение состоялось (Робот не уперся во внешнюю рамку)
                return false
            end
        end
        # УТВ: в направлении direct_borders имеется перегородка
        num_borders+=1
        while robot.isborder(direct_borders)          
            robot.move!(side)
        end
        #УТВ: Робот - стоит за этой перегородкой
        return true
    end
    
    return (move! = move!, get_num = ()->num_borders)
end 
